# Criação de 4 computadores 
set h0 [$simulator host]
set h1 [$simulator host]
set h2 [$simulator host]
set h3 [$simulator host]

# Criação de 2 roteadores com 3 interfaces cada.
set r0 [$simulator router 3]
set r1 [$simulator router 3]

# Criação dos enlaces ligando os computadores e os roteadores para criar a 
# simulação abaixo:
#
# h0 ------                ------ h2
#          \              /
#           r0 -------- r1
#          /              \
# h1 ------                ------ h3
#
# O 'duplex-link' diz que cada enlace tem capacidades em cada sentido
# independentes. Ou seja, se configuro o enlace com 2Mbps, significa que
# posso ter ao mesmo tempo 2Mbps fluindo num sentido e 2Mbps fluindo
# no outro sentido. O atraso configurado é igual nos dois sentidos. Ou
# seja, se configuro o link com 10ms significa que o atraso em um
# sentido é 10ms e o atraso no outro sentido é 10ms (esse é o atraso
# sem contar com o enfileiramento nos roteadores e sem contar com o
# tempo para transmitir os bits em função da capacidade do enlace!)
# Obs.: roteadores tem várias portas, por isso é necessáario colocar o
# .0, .1, .2 para o simulador saber em qual porta o enlace está conectado.
$simulator duplex-link $h0 $r0.0 10Mbps 10ms 
$simulator duplex-link $h1 $r0.1 5Mbps 2ms 
$simulator duplex-link $r0.2 $r1.0 2Mbps 20ms 
$simulator duplex-link $r1.1 $h2 10Mbps 5ms 
$simulator duplex-link $r1.2 $h3 5Mbps 2ms

# Configuração dos hosts: endereço IP do computador, endereço IP do 
# roteador padrão e endereço IP do servidor DNS.
# Obs.: Considere que todas as redes sempre serão classe C, ou seja, 
# máscara = 255.255.255.0
$simulator $h0 10.0.0.1 10.0.0.2 192.168.1.1
$simulator $h1 10.1.1.1 10.1.1.2 192.168.1.1
$simulator $h2 192.168.2.2 192.168.2.3 192.168.1.1

# Obs.: o endereço 1.1.1.1 representa um servidor DNS raiz que todos 
# os servidores DNS da simulação precisam ter configurados como o
# servidor DNS deles (não vai ser usado para nada mas sempre tem que 
# ter essa configuração)
$simulator $h3 192.168.1.1 192.168.1.2 1.1.1.1

# Configuração dos roteadores: porta, endereço IP [[porta, endereço # IP] ...]
$simulator $r0 0 10.0.0.2 1 10.1.1.2 2 192.168.3.3
$simulator $r1 0 192.168.3.4 1 192.168.2.3 2 192.168.1.2

# Configuração dos roteadores: rotas (obs.: nos roteadores todas as 
# rotas devem ser explícitadas apontando para outro roteador ou para a 
# porta. Não há roteador padrão no roteador. Não se preocupe com o 
# caso de comunicações com endereçõs inexistentes na rede).
$simulator $r0 route 10.0.0.0 0 10.1.1.0 1 192.168.3.0 2 192.168.2.0 192.168.3.4 192.168.1.0 192.168.3.4
$simulator $r1 route 192.168.3.0 0 192.168.2.0 1 192.168.1.0 2 10.0.0.0 192.168.3.3 10.1.1.0 192.168.3.3

# Configuração dos roteadores: tempo para processar 1 pacote, porta, 
# tamanho da fila da porta em quantidade de pacotes, [[porta, tamanho ...] ...]
$simulator $r0 performance 100us 0 1000 1 1000 2 1000
$simulator $r1 performance 20us 0 1000 1 1000 2 1000

# Configuração dos agentes da camada de aplicacção. h0 e h1 vão rodar
# clientes HTTP. h2 vai ser um servidor HTTP e h3 vai ser o servidor DNS. 
# Obs.: não há necessidade de explicitar um cliente DNS. Todos os
# hosts já tem um cliente DNS embutido.
set httpc0 [new Agent/HTTPClient]
set httpc1 [new Agent/HTTPClient]
set https2 [new Agent/HTTPServer]
set dns3 [new Agent/DNSServer]
$simulator attach-agent $httpc0 $h0
$simulator attach-agent $httpc1 $h1
$simulator attach-agent $https2 $h2
$simulator attach-agent $dns3 $h3

# Configuração dos sniffers. Onde vou monitorar a rede. A saída tem que 
# aparecer na saída padrão e nos arquivos configurados abaixo:
set sniffer1 [new Agent/Sniffer]
set sniffer2 [new Agent/Sniffer]
$simulator attach-agent $sniffer1 $r0.2 $r1.0 "sniffer1" 
$simulator attach-agent $sniffer2 $h1 $r0.1 "sniffer2"

# Configuração das comunicações entre os agentes. Defino o instante de 
# tempo em segundos quando o acesso deve ocorrer e o tipo de acesso a 
# ser feito entre o cliente e o servidor. Note que 3 GETs do HTTP
# foram feitos com o nome da máquina, o que vai exigir um acessos DNS 
# para (considere que as máaquinas nãao possuem cache. Ou seja, elas
# sempre vão consultar um servidor DNS). Um dos acessos entretanto, 
# está sendo feito direto pelo endereço IP, ou seja, nesse caso uma 
# consulta DNS não deverá ser realizada.
 
$simulator at 10.0 "httpc1 traceroute h2" 
$simulator at 10.0 "httpc0 traceroute 192.168.2.2"
   
#$simulator at 0.5 "httpc0 GET h2 515.html"
#$simulator at 0.6 "httpc1 GET 192.168.2.2 515.html" 
#$simulator at 0.6 "httpc1 GET h0" 
#$simulator at 0.7 "httpc0 GET h2 515.html" 
#$simulator at 1.0 "httpc1 GET 192.168.2.2 515.html"

#$simulator at 4.0 "finish"





